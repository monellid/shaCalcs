package org.gem.correlationmodels;

import static org.junit.Assert.assertTrue;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;
import org.opensha.commons.data.Site;
import org.opensha.commons.geo.GriddedRegion;
import org.opensha.commons.geo.Location;
import org.opensha.commons.geo.LocationUtils;


public class correlationModelsHelperTest {
	
    @Test
    public void orderSitesTest(){
    	/**
    	 * Create list of sites from gridded region and check sorting algorithm
    	 */
         GriddedRegion gridReg =
         new GriddedRegion(new Location(0, 0), 10, 0.01, null);
         List<Site> sites = new ArrayList<Site>();
	     for (Location loc : gridReg.getNodeList()) {
	       sites.add(new Site(loc));
	     }
         CorrelationModelsHelper.orderSites(sites,sites.get(0));
	     Location startLoc = sites.get(0).getLocation();
	     for (int i=0;i<sites.size()-1;i++) {
	       double dist1 =
	               LocationUtils.horzDistance(startLoc, sites.get(i).getLocation());
	       double dist2 =
               LocationUtils.horzDistance(startLoc, sites.get(i+1).getLocation());
	       System.out.println(dist1+" "+dist2);
	       assertTrue(dist1<=dist2);
	     }
    }
}
