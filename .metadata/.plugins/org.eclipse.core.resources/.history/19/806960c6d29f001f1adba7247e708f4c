// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1, build EA-R39)

package junk.webservices.server;

import javax.xml.namespace.QName;
import javax.xml.rpc.encoding.Deserializer;
import javax.xml.rpc.encoding.Serializer;
import javax.xml.rpc.encoding.TypeMapping;
import javax.xml.rpc.encoding.TypeMappingRegistry;

import com.sun.xml.rpc.client.BasicService;
import com.sun.xml.rpc.encoding.CombinedSerializer;
import com.sun.xml.rpc.encoding.InternalEncodingConstants;
import com.sun.xml.rpc.encoding.ObjectArraySerializer;
import com.sun.xml.rpc.encoding.ReferenceableSerializerImpl;
import com.sun.xml.rpc.encoding.SerializerConstants;
import com.sun.xml.rpc.encoding.SingletonDeserializerFactory;
import com.sun.xml.rpc.encoding.SingletonSerializerFactory;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;

public class GMT_WebService_SerializerRegistry implements SerializerConstants {
    public GMT_WebService_SerializerRegistry() {
    }

    public TypeMappingRegistry getRegistry() {

        TypeMappingRegistry registry = BasicService.createStandardTypeMappingRegistry();
        TypeMapping mapping12 = registry.getTypeMapping(SOAP12Constants.NS_SOAP_ENCODING);
        TypeMapping mapping = registry.getTypeMapping(SOAPConstants.NS_SOAP_ENCODING);
        TypeMapping mapping2 = registry.getTypeMapping("");
        {
            QName type = new QName("http://gravity.usc.edu/gmt/ws/GMT_WS", "ArrayOfdatahandler");
            QName elemName = new QName("", "item");
            CombinedSerializer serializer = new ObjectArraySerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING ,
                elemName, InternalEncodingConstants.QNAME_TYPE_DATA_HANDLER, javax.activation.DataHandler.class, 1, null, SOAPVersion.SOAP_11);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,javax.activation.DataHandler[].class, type, serializer);
        }
        {
            QName type = new QName("http://gravity.usc.edu/gmt/ws/GMT_WS", "runGMT_Script");
            CombinedSerializer serializer = new junk.webservices.GMT_WebServiceAPI_runGMT_Script_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,junk.webservices.GMT_WebServiceAPI_runGMT_Script_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://gravity.usc.edu/gmt/ws/GMT_WS", "runGMT_ScriptResponse");
            CombinedSerializer serializer = new junk.webservices.GMT_WebServiceAPI_runGMT_Script_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,junk.webservices.GMT_WebServiceAPI_runGMT_Script_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://gravity.usc.edu/gmt/ws/GMT_WS", "ArrayOfstring");
            QName elemName = new QName("", "item");
            CombinedSerializer serializer = new ObjectArraySerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING ,
                elemName, SchemaConstants.QNAME_TYPE_STRING, java.lang.String.class, 1, null, SOAPVersion.SOAP_11);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,java.lang.String[].class, type, serializer);
        }
        return registry;
    }

    private static void registerSerializer(TypeMapping mapping, Class javaType, QName xmlType,
        Serializer ser) {
        mapping.register(javaType, xmlType, new SingletonSerializerFactory(ser),
            new SingletonDeserializerFactory((Deserializer)ser));
    }

}
